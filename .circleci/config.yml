version: 2
jobs:
  frontend:
    docker:
      - image: cimg/node:16.15
    steps:
      - checkout
      - run:
          name: "Install dependencies"
          command: yarn install
      - run:
          name: "Build"
          command: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - internal/ui/dist/*

  backend:
    docker:
      - image: cimg/go:1.18
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: go get -v -t -d ./...
      - run: go test -v ./...
      - run:
          command: |
            GOOS=linux GOARCH=amd64 go build -o release/ssl-remote-control_linux_amd64 ./cmd/ssl-remote-control
            GOOS=linux GOARCH=arm go build -o release/ssl-remote-control_linux_arm ./cmd/ssl-remote-control
            GOOS=linux GOARCH=arm64 go build -o release/ssl-remote-control_linux_arm64 ./cmd/ssl-remote-control
            GOOS=darwin GOARCH=amd64 go build -o release/ssl-remote-control_darwin_amd64 ./cmd/ssl-remote-control
            GOOS=windows GOARCH=amd64 go build -o release/ssl-remote-control_windows_amd64.exe ./cmd/ssl-remote-control
      - run:
          command: |
            mkdir -p release
            tar czf release/bootstrap.tar.gz rpi
      - persist_to_workspace:
          root: .
          paths:
            - release/*

  publish-github-release:
    docker:
      - image: cimg/go:1.18
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Prepare artifacts"
          working_directory: release
          command: |
            mv ssl-remote-control_linux_amd64 ssl-remote-control_${CIRCLE_TAG}_linux_amd64
            mv ssl-remote-control_linux_arm ssl-remote-control_${CIRCLE_TAG}_linux_arm
            mv ssl-remote-control_linux_arm64 ssl-remote-control_${CIRCLE_TAG}_linux_arm64
            mv ssl-remote-control_darwin_amd64 ssl-remote-control_${CIRCLE_TAG}_darwin_amd64
            mv ssl-remote-control_windows_amd64.exe ssl-remote-control_${CIRCLE_TAG}_windows_amd64.exe
      - run:
          name: "Publish Release on GitHub"
          command: |
            go install github.com/tcnksm/ghr@v0.14.0
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./release/

  docker-build:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
      - run: |
          docker build .

  docker-build-and-push:
    docker:
      - image: cimg/base:2022.06
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
      - run: |
          TAG=${CIRCLE_TAG:1}
          TAG=${TAG:-latest}
          docker build -t robocupssl/ssl-remote-control:$TAG .
          docker login -u "${DOCKER_HUB_USERNAME}" -p "${DOCKER_HUB_PASSWORD}"
          docker push robocupssl/ssl-remote-control:$TAG

workflows:
  version: 2
  main:
    jobs:
      - frontend:
          filters:
            tags:
              only: /.*/
      - backend:
          requires:
            - frontend
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          context: github
          requires:
            - backend
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - docker-build:
          context: docker hub
          filters:
            branches:
              ignore: master
      - docker-build-and-push:
          context: docker hub
          filters:
            branches:
              only: master
            tags:
              only: /^v.*/
